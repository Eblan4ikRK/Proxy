{
  "v28_analysis": {
    "found": false,
    "return_variables": [],
    "function_body": "",
    "structure": {},
    "potential_values": {}
  },
  "simulation_results": {
    "success": false,
    "simulated_values": {},
    "extracted_data": [],
    "method": "static_analysis"
  },
  "extracted_strings": [],
  "variable_mappings": {
    "v0": "tonumber",
    "v1": "string.byte",
    "v2": "string.char",
    "v3": "string.sub",
    "v4": "string.gsub",
    "v5": "string.rep",
    "v6": "table.concat",
    "v7": "table.insert",
    "v8": "math.ldexp",
    "v9": "getfenv",
    "v10": "setmetatable",
    "v11": "pcall",
    "v12": "select",
    "v13": "unpack",
    "v14": "tonumber"
  },
  "debug_script": "-- Debug script to extract v28 return values\n-- This would be injected into the original script to dump values\n\nlocal original_v28 = v28\nlocal function debug_v28()\n    local v93, v94, v95, v96, v97, v98, v99, v100 = original_v28()\n    \n    print(\"=== V28 RETURN VALUES DEBUG ===\")\n    print(\"v93:\", type(v93), v93)\n    print(\"v94:\", type(v94), v94)\n    print(\"v95:\", type(v95), v95)\n    print(\"v96:\", type(v96), v96)\n    print(\"v97:\", type(v97), v97)\n    print(\"v98:\", type(v98), v98)\n    print(\"v99:\", type(v99), v99)\n    print(\"v100:\", type(v100), v100)\n    print(\"=== END DEBUG ===\")\n    \n    return v93, v94, v95, v96, v97, v98, v99, v100\nend\n\n-- Replace v28 with debug version\nv28 = debug_v28\n",
  "recommendations": [
    "Inject debug script to extract runtime values",
    "Monitor v28 function return values during execution",
    "Use extracted strings to understand functionality",
    "Replace variable mappings for better readability"
  ],
  "statistics": {
    "v28_found": false,
    "return_variables_count": 0,
    "extracted_strings_count": 0,
    "variable_mappings_count": 15,
    "simulation_success": false
  }
}