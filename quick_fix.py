#!/usr/bin/env python3
"""
üîß QUICK FIX –¥–ª—è –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ–∫—É—Ä—Å–∏–∏ –≤ hooked —Ñ–∞–π–ª–∞—Ö
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç stack overflow –≤ print hook

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 quick_fix.py hooked_file.lua
"""

import sys
import os
import re

def main():
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 quick_fix.py hooked_file.lua")
        print("   hooked_file.lua - —Ñ–∞–π–ª —Å –ø—Ä–æ–±–ª–µ–º–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏")
        sys.exit(1)
    
    input_file = sys.argv[1]
    
    if not os.path.exists(input_file):
        print(f"‚ùå –§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)
    
    print("üîß QUICK FIX –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏ –≤ print hook")
    print(f"üìÅ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º—ã–π —Ñ–∞–π–ª: {input_file}")
    print("")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(input_file, 'r', encoding='utf-8') as f:
        code = f.read()
    
    print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ print hook
    if 'print = function' in code and 'capture_string' in code:
        print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å print hook —Ä–µ–∫—É—Ä—Å–∏–µ–π")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
        print("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π print –≤ –Ω–∞—á–∞–ª–æ
        safe_print_code = '''
-- QUICK FIX: –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π print –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏
local original_print = print
local _print_safe = function(...)
    return original_print(...)
end

'''
        
        # 2. –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –≤—ã–∑–æ–≤—ã print –≤ capture_string –Ω–∞ _print_safe
        fixed_code = code.replace(
            'print("üìù STRING[" .. _string_counter .. "] (" .. (context or "unknown") .. "): \'" .. str .. "\'")',
            '_print_safe("üìù STRING[" .. _string_counter .. "] (" .. (context or "unknown") .. "): \'" .. str .. "\'")'
        )
        
        # 3. –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π print hook
        fixed_code = re.sub(
            r'-- Hook print for –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞.*?print = function\(.*?\n.*?end.*?\n.*?print\(".*?print function hooked!"\)',
            '-- Print hook DISABLED to prevent recursion\n_print_safe("‚ö†Ô∏è Print hook disabled to prevent stack overflow")',
            fixed_code,
            flags=re.DOTALL
        )
        
        # 4. –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è print –Ω–∞ _print_safe –≤ hook –∫–æ–¥–µ
        fixed_code = re.sub(
            r'(\s+)print\("([^"]*)"',
            r'\1_print_safe("\2"',
            fixed_code
        )
        
        # 5. –î–æ–±–∞–≤–ª—è–µ–º safe_print –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
        if '-- FULL HOOK INJECTION START' in fixed_code:
            fixed_code = fixed_code.replace(
                '-- FULL HOOK INJECTION START',
                safe_print_code + '-- FULL HOOK INJECTION START (FIXED)'
            )
        else:
            fixed_code = safe_print_code + fixed_code
        
        # –°–æ–∑–¥–∞—ë–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fixed_filename = input_file.replace('.lua', '_fixed.lua')
        
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {fixed_filename}")
        with open(fixed_filename, 'w', encoding='utf-8') as f:
            f.write(fixed_code)
        
        print("")
        print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´:")
        print("   üîß –î–æ–±–∞–≤–ª–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π _print_safe")
        print("   üîß –ó–∞–º–µ–Ω–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã print")
        print("   üîß –û—Ç–∫–ª—é—á–µ–Ω —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π print hook")
        print("   üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã capture —Ñ—É–Ω–∫—Ü–∏–∏")
        print("")
        print("üöÄ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:")
        print(f"   lua {fixed_filename}")
        print("")
        print("‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å stack overflow –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ—à–µ–Ω–∞!")
        
    else:
        print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å print hook –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
        print("   –í–æ–∑–º–æ–∂–Ω–æ —Ñ–∞–π–ª —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ")

if __name__ == "__main__":
    main()