{
  "v28_found": true,
  "v28_body_size": 26,
  "data_flow_analysis": {
    "v54_function": null,
    "v59_structure": null,
    "return_variable": null,
    "v54_usage": null
  },
  "string_operations": [],
  "debug_extraction_code": "-- –£–ª—É—á—à–µ–Ω–Ω—ã–π –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ v28\n-- –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –ü–ï–†–ï–î —Å—Ç—Ä–æ–∫–æ–π return v15(...)\n\n-- –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º v28\nlocal original_v28 = v28\nlocal function enhanced_debug_v28()\n    print(\"=== –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –û–¢–õ–ê–î–ö–ê V28 ===\")\n    \n    -- –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é\n    local result = original_v28()\n    \n    print(\"–¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ v28:\", type(result))\n    \n    if type(result) == \"table\" then\n        print(\"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ v28:\")\n        for i, component in ipairs(result) do\n            print(f\"  [{i}] —Ç–∏–ø:\", type(component))\n            \n            if type(component) == \"table\" then\n                print(f\"    –†–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã: {#component}\")\n                -- –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n                for j = 1, math.min(#component, 3) do\n                    local elem = component[j]\n                    if type(elem) == \"table\" then\n                        print(f\"      [{j}] —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–æ–º {#elem}\")\n                        if #elem > 0 then\n                            print(f\"        –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {elem[1]} (—Ç–∏–ø: {type(elem[1])})\")\n                        end\n                    else\n                        print(f\"      [{j}] = {elem} (—Ç–∏–ø: {type(elem)})\")\n                    end\n                end\n                if #component > 3 then\n                    print(f\"    ... –∏ –µ—â—ë {#component - 3} —ç–ª–µ–º–µ–Ω—Ç–æ–≤\")\n                end\n            elseif type(component) == \"function\" then\n                print(\"    –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è - –ø–æ–ø—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å\")\n                local success, func_result = pcall(component)\n                if success then\n                    print(f\"    –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞: {func_result} (—Ç–∏–ø: {type(func_result)})\")\n                else\n                    print(f\"    –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ: {func_result}\")\n                end\n            else\n                print(f\"    –ó–Ω–∞—á–µ–Ω–∏–µ: {component}\")\n            end\n        end\n    end\n    \n    print(\"=== –ö–û–ù–ï–¶ –†–ê–°–®–ò–†–ï–ù–ù–û–ô –û–¢–õ–ê–î–ö–ò V28 ===\")\n    return result\nend\n\n-- –ó–∞–º–µ–Ω—è–µ–º v28\nv28 = enhanced_debug_v28\n\n-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –æ—Ç–ª–∞–¥–∫–∞ v29 –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\nlocal original_v29 = v29\nv29 = function(vm_data, env, ...)\n    print(\"=== –û–¢–õ–ê–î–ö–ê V29 (–í–´–ü–û–õ–ù–ï–ù–ò–ï –í–ò–†–¢–£–ê–õ–¨–ù–û–ô –ú–ê–®–ò–ù–´) ===\")\n    print(\"VM –¥–∞–Ω–Ω—ã–µ —Ç–∏–ø:\", type(vm_data))\n    \n    if type(vm_data) == \"table\" and #vm_data >= 1 then\n        local instructions = vm_data[1]  -- –û–±—ã—á–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –ø–µ—Ä–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ\n        if type(instructions) == \"table\" then\n            print(\"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π:\", #instructions)\n            \n            -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π\n            for i = 1, math.min(#instructions, 5) do\n                local instr = instructions[i]\n                if type(instr) == \"table\" then\n                    print(f\"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è {i}: {table.concat(instr, ', ')}\")\n                else\n                    print(f\"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è {i}: {instr}\")\n                end\n            end\n        end\n        \n        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–æ–Ω—Å—Ç–∞–Ω—Ç (–æ–±—ã—á–Ω–æ –≤–æ –≤—Ç–æ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ)\n        if #vm_data >= 2 then\n            local constants = vm_data[2]\n            if type(constants) == \"table\" then\n                print(\"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç:\", #constants)\n                for i = 1, math.min(#constants, 10) do\n                    local const = constants[i]\n                    print(f\"–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ {i}: {const} (—Ç–∏–ø: {type(const)})\")\n                end\n            end\n        end\n    end\n    \n    local result = original_v29(vm_data, env, ...)\n    print(\"=== –ö–û–ù–ï–¶ –û–¢–õ–ê–î–ö–ò V29 ===\")\n    return result\nend\n\nprint(\"üîß –£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ö—É–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\")\n\n",
  "analysis_summary": {
    "has_v54_function": false,
    "has_v59_structure": false,
    "has_return_statement": false,
    "string_operations_count": 0
  }
}